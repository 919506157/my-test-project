<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd"
       default-lazy-init="true">

    <description>Spring公共配置</description>

    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${datasource.driver}"/>
        <property name="jdbcUrl" value="${datasource.url}"/>
        <property name="user" value="${datasource.username}"/>
        <property name="password" value="${datasource.password}"/>
        <property name="acquireIncrement" value="${c3p0.acquire_increment}"/>
        <property name="idleConnectionTestPeriod" value="${c3p0.idle_test_period}"/>
        <property name="checkoutTimeout" value="${c3p0.timeout}"/>
        <property name="maxPoolSize" value="${c3p0.max_size}"/>
        <property name="minPoolSize" value="${c3p0.min_size}"/>
        <property name="maxIdleTime" value="${c3p0.max_idle_time}"/>
        <property name="initialPoolSize" value="${c3p0.min_size}"/>

    </bean>

    &lt;!&ndash; MyBatis配置 &ndash;&gt;
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        &lt;!&ndash; 自动扫描entity目录, 省掉Configuration.xml里的手工配置 &ndash;&gt;
        <property name="typeAliasesPackage" value="com.uns.unspay.commons.entry"/>
        &lt;!&ndash; 显式指定Mapper文件位置 &ndash;&gt;
        <property name="mapperLocations" value="classpath:/mybatis/*Mapper.xml"/>
    </bean>
    &lt;!&ndash; 扫描basePackage下所有以@MyBatisRepository标识的 接口&ndash;&gt;
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.uns.unspay.commons.dao"/>
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
    </bean>

    &lt;!&ndash; 事务管理器, Jdbc单数据源事务 &ndash;&gt;
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    &lt;!&ndash; 使用annotation定义事务 &ndash;&gt;
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    &lt;!&ndash; 定义aspectj &ndash;&gt;
    <aop:aspectj-autoproxy proxy-target-class="true"/>-->

    <!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
    <context:annotation-config/>
    <context:component-scan base-package="com.zhang"/>


    <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->
    <dubbo:application name="my-test-project"/> <!-- 使用multicast广播注册中心暴露发现服务地址 -->
    <dubbo:registry address="zookeeper://172.22.30.83:2181"/> <!-- 生成远程服务代理，可以和本地bean一样使用demoService -->

</beans>